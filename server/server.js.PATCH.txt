/* IMPORTANT: This is a PATCH SNIPPET. Merge with your existing server.js.
 * Key changes:
 * - trust proxy for secure cookies on Render
 * - CORS credentials + dynamic allowed origins
 */

const express = require('express');
const cors = require('cors');
const cookieParser = require('cookie-parser');
const http = require('http');

const app = express();
app.set('trust proxy', 1); // needed for SameSite=None; Secure on Render/HTTPS

const rawAllowed = process.env.CLIENT_ORIGIN || 'http://localhost:5173';
const allowedOrigins = rawAllowed.split(',').map(s => s.trim());

app.use(cors({
  origin: function(origin, cb) {
    // Allow same-origin or tools that don't send origin (like curl/postman)
    if (!origin) return cb(null, true);
    const ok = allowedOrigins.some(o => origin === o);
    return cb(ok ? null : new Error('CORS: origin not allowed: ' + origin), ok);
  },
  credentials: true
}));

app.use(express.json());
app.use(cookieParser());

// ... your routes mounted under /api ...

const server = http.createServer(app);

// If you use socket.io, pass the same CORS origins
try {
  const { Server } = require('socket.io');
  const io = new Server(server, {
    cors: {
      origin: allowedOrigins,
      credentials: true
    }
  });
  app.set('io', io);
} catch (e) {
  // socket.io not installed in this environment
}

const PORT = process.env.PORT || 5000;
server.listen(PORT, () => {
  console.log('Server listening on', PORT, 'Allowed origins:', allowedOrigins);
});

module.exports = app;
